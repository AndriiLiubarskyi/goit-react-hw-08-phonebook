{"version":3,"sources":["components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","components/Loader.js","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js","redux/contacts/contacts-action.js","components/UserMenu/UserMenu.module.css","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/AppBar/AppBar.module.css","components/Container/Container.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js"],"names":["style","activeLink","color","Navigation","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","exact","className","styles","link","activeStyle","UserMenu","dispatch","useDispatch","name","getUsername","container","button","type","onClick","authOperations","logOut","AuthNav","AppBar","header","Container","children","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","PageLoader","height","width","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fetchCurrentUser","fallback","path","items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","combineReducers","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","createAction","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","response","logIn","message","operations","thunkAPI","getState","persistedToken","console","log","get","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","rejected"],"mappings":"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","file":"static/js/main.d398a66f.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport styles from '../Navigation/Navigation.module.css';\n\nconst style = {\n  activeLink: {\n    color: 'rgb(40, 23, 22)',\n  },\n};\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink\n        to=\"/\"\n        exact\n        className={styles.link}\n        activeStyle={style.activeLink}\n      >\n        Главная\n      </NavLink>\n      {isLoggedIn && (\n        <>\n          <NavLink\n            to=\"/contacts\"\n            exact\n            className={styles.link}\n            activeStyle={style.activeLink}\n          >\n            Контакты\n          </NavLink>\n        </>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport styles from '../UserMenu/UserMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  return (\n    <div className={styles.container}>\n      <span className={styles.name}>Добро пожаловать, {name}</span>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from '../AuthNav/AuthNav.module.css';\n\nconst style = {\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={styles.link}\n        activeStyle={style.activeLink}\n      >\n        Регистрация\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={styles.link}\n        activeStyle={style.activeLink}\n      >\n        Логин\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport { authSelectors } from '../../redux/auth';\nimport styles from '../AppBar/AppBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header className={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nconst PageLoader = () => (\n  <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={120} />\n);\n\nexport default PageLoader;\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar/AppBar';\nimport Container from './components/Container';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { authOperations, authSelectors } from './redux/auth';\nimport PageLoader from './components/Loader';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n      <Switch>\n        <Suspense fallback={<PageLoader />}>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/register\" restricted>\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/login\" redirectTo=\"/todos\" restricted>\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Suspense>\n      </Switch>\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './contacts-action';\n\nconst items = createReducer([], {\n    [fetchContactsSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducers from './contacts/contacts-reduser';\nimport { authReducer } from './auth';\n\nconst middleware = getDefaultMiddleware =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducers,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\nexport const changeFilter = createAction('contacts/changeFilter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3TKBT\",\"name\":\"UserMenu_name__E42Uy\",\"button\":\"UserMenu_button__3vY9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3x8g-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3z4lR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3EZre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__13whM\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n"],"sourceRoot":""}